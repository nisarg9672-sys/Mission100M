"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FasterAC = exports.AC = void 0;
const Indicator_1 = require("../Indicator");
const AO_1 = require("../AO/AO");
const SMA_1 = require("../SMA/SMA");
const MOM_1 = require("../MOM/MOM");
class AC extends Indicator_1.BigIndicatorSeries {
    constructor(shortAO, longAO, signalInterval) {
        super();
        this.shortAO = shortAO;
        this.longAO = longAO;
        this.signalInterval = signalInterval;
        this.ao = new AO_1.AO(shortAO, longAO);
        this.momentum = new MOM_1.MOM(1);
        this.signal = new SMA_1.SMA(signalInterval);
    }
    update(input) {
        const ao = this.ao.update(input);
        if (ao) {
            this.signal.update(ao);
            if (this.signal.isStable) {
                const result = this.setResult(ao.sub(this.signal.getResult()));
                this.momentum.update(result);
                return this.result;
            }
        }
    }
}
exports.AC = AC;
class FasterAC extends Indicator_1.NumberIndicatorSeries {
    constructor(shortAO, longAO, signalInterval) {
        super();
        this.shortAO = shortAO;
        this.longAO = longAO;
        this.signalInterval = signalInterval;
        this.ao = new AO_1.FasterAO(shortAO, longAO);
        this.momentum = new MOM_1.FasterMOM(1);
        this.signal = new SMA_1.FasterSMA(signalInterval);
    }
    update(input) {
        const ao = this.ao.update(input);
        if (ao) {
            this.signal.update(ao);
            if (this.signal.isStable) {
                const result = this.setResult(ao - this.signal.getResult());
                this.momentum.update(result);
                return this.result;
            }
        }
    }
}
exports.FasterAC = FasterAC;
//# sourceMappingURL=AC.js.map