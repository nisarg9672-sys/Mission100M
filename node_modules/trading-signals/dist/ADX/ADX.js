"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FasterADX = exports.ADX = void 0;
const Indicator_1 = require("../Indicator");
const WSMA_1 = require("../WSMA/WSMA");
const DX_1 = require("../DX/DX");
class ADX extends Indicator_1.BigIndicatorSeries {
    constructor(interval, SmoothingIndicator = WSMA_1.WSMA) {
        super();
        this.interval = interval;
        this.adx = new SmoothingIndicator(this.interval);
        this.dx = new DX_1.DX(interval, SmoothingIndicator);
    }
    get mdi() {
        return this.dx.mdi;
    }
    get pdi() {
        return this.dx.pdi;
    }
    update(candle) {
        const result = this.dx.update(candle);
        if (result) {
            this.adx.update(result);
        }
        if (this.adx.isStable) {
            return this.setResult(this.adx.getResult());
        }
    }
}
exports.ADX = ADX;
class FasterADX extends Indicator_1.NumberIndicatorSeries {
    constructor(interval, SmoothingIndicator = WSMA_1.FasterWSMA) {
        super();
        this.interval = interval;
        this.adx = new SmoothingIndicator(this.interval);
        this.dx = new DX_1.FasterDX(interval, SmoothingIndicator);
    }
    get mdi() {
        return this.dx.mdi;
    }
    get pdi() {
        return this.dx.pdi;
    }
    update(candle) {
        const result = this.dx.update(candle);
        if (result !== undefined) {
            this.adx.update(result);
        }
        if (this.adx.isStable) {
            return this.setResult(this.adx.getResult());
        }
    }
}
exports.FasterADX = FasterADX;
//# sourceMappingURL=ADX.js.map