"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FasterWSMA = exports.WSMA = void 0;
const __1 = require("..");
const MovingAverage_1 = require("../MA/MovingAverage");
const SMA_1 = require("../SMA/SMA");
const Indicator_1 = require("../Indicator");
class WSMA extends MovingAverage_1.MovingAverage {
    constructor(interval) {
        super(interval);
        this.interval = interval;
        this.indicator = new SMA_1.SMA(interval);
        this.smoothingFactor = new __1.Big(1).div(this.interval);
    }
    updates(prices) {
        prices.forEach(price => this.update(price));
        return this.result;
    }
    update(price) {
        const sma = this.indicator.update(price);
        if (this.result) {
            const smoothed = new __1.Big(price).minus(this.result).mul(this.smoothingFactor);
            return this.setResult(smoothed.plus(this.result));
        }
        else if (this.result === undefined && sma) {
            return this.setResult(sma);
        }
    }
}
exports.WSMA = WSMA;
class FasterWSMA extends Indicator_1.NumberIndicatorSeries {
    constructor(interval) {
        super();
        this.interval = interval;
        this.indicator = new SMA_1.FasterSMA(interval);
        this.smoothingFactor = 1 / this.interval;
    }
    updates(prices) {
        prices.forEach(price => this.update(price));
        return this.result;
    }
    update(price) {
        const sma = this.indicator.update(price);
        if (this.result !== undefined) {
            const smoothed = (price - this.result) * this.smoothingFactor;
            return this.setResult(smoothed + this.result);
        }
        else if (this.result === undefined && sma !== undefined) {
            return this.setResult(sma);
        }
    }
}
exports.FasterWSMA = FasterWSMA;
//# sourceMappingURL=WSMA.js.map